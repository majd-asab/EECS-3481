package asymmetric;

import java.math.BigInteger;
import java.security.KeyFactory;
import java.security.MessageDigest;
import java.security.interfaces.RSAPublicKey;
import java.security.spec.RSAPublicKeySpec;

import javax.crypto.Cipher;

import util.CryptoTools;

public class test2 {
	
	public static void main(String[] args) throws Exception{
	
		// Certificate Authority's Public Key:
		BigInteger e = new BigInteger("65537");
		BigInteger n = new BigInteger("130918180062915485900954597631313629864836201978227133319187624210227148776154322707071245742980686741118030867148438370439660292136998104360860705032542533349698053368186836516200888554212669145740474501485880521654642182193789294300080988945147087020219803028448157467640485725166289781136027695109151280023");
		
		
		// Amazon's Signed Certificate:
		String cert = "e=37 n=93278866311019776099878034345988872583922082512803071654519844166647916261785073354252999661033823739872649192305178783791518737797092566893032148735231389511525184652818326118668340379850523370294815154369236952734597211088629875903059097016197082451297378962484327395235631148815646862980335811333142240249";
		BigInteger eAma = new BigInteger("37");
		BigInteger nAma = new BigInteger("93278866311019776099878034345988872583922082512803071654519844166647916261785073354252999661033823739872649192305178783791518737797092566893032148735231389511525184652818326118668340379850523370294815154369236952734597211088629875903059097016197082451297378962484327395235631148815646862980335811333142240249");
		
		BigInteger signature = new BigInteger("11531280768179550579331556249303328915223547219745345665949069012964977947530091027612571754948901221327166254905453945165662610951422673651096375659329388370149699617779525616152533250789180611352872833352062184747273452210787946471934403981305957826341975780373098791566923811259550649755066185139838118559");

		// Verifying:
		
		MessageDigest sha224 = MessageDigest.getInstance("sha-224");
		  byte[] digest = sha224.digest(cert.getBytes());
		 System.out.println(new String(digest));
		  
		 //decrypt the sig using amazon's public
		 BigInteger dec = signature.modPow(e, n);
		 System.out.println(dec);
		 
		 
		
	}

}
